/* Scss Document */
/* Base data */
/* Scss Document */
/* var mixins first */
/* Scss Document */
/*functions*/
/* Scss Document */
html {
  height: 100%;
}

body {
  margin: 0;
  padding: 0;
  widows: inherit;
  /*kern and ligature set*/
  -webkit-font-kerning: normal;
  font-kerning: normal;
  text-rendering: optimizeLegibility;
  -webkit-font-variant-ligatures: common-ligatures;
  font-variant-ligatures: common-ligatures;
}

li, ul {
  font-size: 1rem;
  margin: 0.3rem 0;
  text-decoration: none;
}

label {
  font-size: 1rem;
  margin: 0.3rem 0 0.3rem 10px;
}

p {
  font-family: "Barlow Semi Condensed", sans-serif;
  font-size: 1.3rem;
  font-weight: 400;
  line-height: 1.65;
  color: white;
  text-align: left;
  margin-top: 0;
  margin-right: 0;
  margin-bottom: 0.75rem;
  margin-left: 0;
}

p.copyBlack {
  font-family: "Barlow Semi Condensed", sans-serif;
  font-size: 1.3rem;
  font-weight: 400;
  line-height: 1.65;
  color: white;
  text-align: left;
  margin-top: 0;
  margin-right: 0;
  margin-bottom: 0.4rem;
  margin-left: 0;
  color: #29292A;
}

h1 {
  font-family: "Barlow Condensed", sans-serif;
  font-size: 1.8rem;
  font-weight: 400;
  line-height: 1.35;
  color: #29292A;
  text-align: center;
  margin-top: 0;
  margin-right: 0;
  margin-bottom: 0;
  margin-left: 0;
}

h2 {
  font-family: "Barlow Condensed", sans-serif;
  font-size: 1.3rem;
  font-weight: 400;
  line-height: 1.4;
  color: #536DFE;
  text-align: left;
  margin-top: 0;
  margin-right: 0;
  margin-bottom: 0.9rem;
  margin-left: 0;
}

h3 {
  font-family: "Barlow Condensed", sans-serif;
  font-size: 1.6rem;
  font-weight: 400;
  line-height: 2.1;
  color: white;
  text-align: left;
  margin-top: 2rem;
  margin-right: 0;
  margin-bottom: 0.7rem;
  margin-left: 0;
}

h3.footer {
  font-family: "Barlow Condensed", sans-serif;
  font-size: 1.6rem;
  font-weight: 400;
  line-height: 2.1;
  color: white;
  text-align: left;
  margin-top: 20px;
  margin-right: 0;
  margin-bottom: 0.5rem;
  margin-left: 0;
  color: white;
}

h4 {
  font: 700 1.2rem/1.6rem "Barlow Condensed", sans-serif;
  color: #29292A;
}

/*=======================*/
/*Links*/
/*=======================*/
a.blueLink {
  color: #536DFE !important;
}

a.blueLink:hover {
  text-decoration: underline !important;
}

a.copyBlackLink {
  color: #29292A !important;
  font-family: "Barlow Semi Condensed", sans-serif;
}

a.copyBlackLink:hover {
  text-decoration: underline !important;
}

strong {
  font-weight: 700;
}

.medium {
  font-weight: 700 !important;
}

.shadow {
  text-shadow: 3px 3px 6px rgba(41, 41, 42, 0.5);
}

/* Structural */
body {
  background-color: black;
  margin: auto;
}

.grid-one {
  margin: 0 7%;
  border: 0px solid black;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-auto-rows: minmax(100px, auto);
  grid-gap: 70px;
  justify-items: stretch;
  min-height: 336px;
}

.box1 {
  grid-column: 1/2;
  grid-row: 1;
  border: 0px solid red;
}

.box2 {
  grid-column: 2/3;
  grid-row: 1;
  border: 0px solid red;
}

.box3 {
  grid-column: 3/4;
  grid-row: 1;
  border: 0px solid red;
}

.grid-two {
  margin: 0 7%;
  border: 0px solid black;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-auto-rows: minmax(100px, auto);
  grid-gap: 70px;
  justify-items: stretch;
}

.box4 {
  grid-column: 1/2;
  grid-row: 1;
  border: 0px solid red;
}

.box4 > img {
  width: 250px;
  margin-top: 8px;
  opacity: 0.5;
}

.box5 {
  grid-column: 2/3;
  grid-row: 1;
  border: 0px solid red;
}

.box6 {
  grid-column: 3/4;
  grid-row: 1;
  border: 0px solid red;
}

.grid-three {
  margin: 0 7%;
  border: 0px solid black;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-auto-rows: minmax(100px, auto);
  grid-gap: 70px;
  justify-items: stretch;
}

.box7 {
  grid-column: 1/2;
  grid-row: 1;
  border: 0px solid red;
}

.box8 {
  grid-column: 2/3;
  grid-row: 1;
  border: 0px solid red;
}

.box9 {
  grid-column: 3/4;
  grid-row: 1;
  border: 0px solid red;
}

.box9 > img {
  width: 250px;
  margin-top: 8px;
  opacity: 0.5;
}

/* Scss weather API */
#map {
  height: 100%;
}

.googleMap {
  border: 1px solid rgba(41, 41, 42, 0.5);
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 0;
}

* {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  margin: 0px;
  padding: 0px;
}

.slider {
  width: 100%;
  max-height: 100vh;
  position: relative;
}

.slItems {
  width: 100%;
  height: 100%;
  overflow: hidden;
  position: relative;
}

.slItem {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center top;
  opacity: 0;
  visibility: hidden;
  -webkit-backface-visibility: hidden;
  /* Chrome, Safari, Opera */
  backface-visibility: hidden;
}

.slText {
  position: absolute;
  top: 65%;
  left: 50%;
  max-width: 90%;
  width: 100%;
  padding: 0 0;
  text-align: center;
  transform: translate3d(-50%, -50%, 0);
  -webkit-transform: translate3d(-50%, -50%, 0);
  -moz-transform: translate3d(-50%, -50%, 0);
  -o-transform: translate3d(-50%, -50%, 0);
  -ms-transform: translate3d(-50%, -50%, 0);
  color: #fff;
  font: 400 1.7rem/2.4rem "Barlow Condensed", sans-serif;
}

.slider [class*="ctrl"] {
  position: absolute;
  top: 50%;
  color: #fff;
  font-size: 85px;
  font-weight: bold;
  margin-top: -42.5px;
  cursor: pointer;
}

.ctrlNext {
  right: 30px;
}

.ctrlPrev {
  left: 30px;
}

.slItem.active {
  opacity: 1;
  visibility: visible;
  transform: translate3d(0, 0, 0);
  -webkit-transform: translate3d(0, 0, 0);
  -moz-transform: translate3d(0, 0, 0);
  -o-transform: translate3d(0, 0, 0);
  -ms-transform: translate3d(0, 0, 0);
}

.next, .prev {
  -webkit-transition: -webkit-transform 0.9s ease-in-out;
  transition: -webkit-transform 0.9s ease-in-out;
  transition: transform 0.9s ease-in-out;
  transition: transform 0.9s ease-in-out, -webkit-transform 0.9s ease-in-out;
  -webkit-transition: -webkit-transform 0.7s ease-in-out;
  -moz-transition: -moz-transform 0.7s ease-in-out;
  -o-transition: -o-transform 0.7s ease-in-out;
  -ms-transition: -ms-transform 0.7s ease-in-out;
}

.slItem.nextItem {
  opacity: 1;
  visibility: visible;
  transform: translate3d(100%, 0, 0);
  -webkit-transform: translate3d(100%, 0, 0);
  -moz-transform: translate3d(100%, 0, 0);
  -o-transform: translate3d(100%, 0, 0);
  -ms-transform: translate3d(100%, 0, 0);
}

.slItem.nextItem.next, .slItem.prevItem.prev {
  transform: translate3d(0, 0);
  -webkit-transform: translate3d(0, 0, 0);
  -moz-transform: translate3d(0, 0, 0);
  -o-transform: translate3d(0, 0, 0);
  -ms-transform: translate3d(0, 0, 0);
}

.slItem.active.next {
  transform: translate3d(-100%, 0, 0);
  -webkit-transform: translate3d(-100%, 0, 0);
  -moz-transform: translate3d(-100%, 0, 0);
  -o-transform: translate3d(-100%, 0, 0);
  -ms-transform: translate3d(-100%, 0, 0);
}

.slItem.prevItem {
  opacity: 1;
  visibility: visible;
  transform: translate3d(-100%, 0, 0);
  -webkit-transform: translate3d(-100%, 0, 0);
  -moz-transform: translate3d(-100%, 0, 0);
  -o-transform: translate3d(-100%, 0, 0);
  -ms-transform: translate3d(-100%, 0, 0);
}

.slItem.active.prev {
  transform: translate3d(100%, 0, 0);
  -webkit-transform: translate3d(100%, 0, 0);
  -moz-transform: translate3d(100%, 0, 0);
  -o-transform: translate3d(100%, 0, 0);
  -ms-transform: translate3d(100%, 0, 0);
}

.slDots {
  position: absolute;
  bottom: 50px;
  left: 50%;
  transform: translate(-50%, 0);
  -webkit-transform: translate(-50%, 0);
  -moz-transform: translate(-50%, 0);
  -o-transform: translate(-50%, 0);
  -ms-transform: translate(-50%, 0);
}

.slDotsSingle {
  width: 13px;
  height: 13px;
  float: left;
  border: 1px solid white;
  border-radius: 50%;
  margin-left: 5px;
  cursor: pointer;
  -webkit-transition: background 0.3s ease;
  transition: background 0.3s ease;
}

.slDotsSingle.active {
  background: white;
}

.slDotsSingle:hover {
  background: #D0D0D0;
  border-color: #D0D0D0;
}

/* Scss Document */
footer {
  background-color: #536DFE;
  margin-top: 60px;
  min-height: 170px;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.flexContent {
  -webkit-box-flex: 1;
  -ms-flex: 1 0 auto;
  flex: 1 0 auto;
}

hr {
  border: 1px solid white;
  margin-top: 10px;
}

a.simpleFooterLink {
  color: #ffffff;
}

a.simpleFooterLink:hover {
  opacity: 0.7;
  -webkit-transition: 0.7s;
  transition: 0.7s;
  text-decoration: underline;
}

.social {
  color: #ffffff;
  cursor: pointer;
  font-size: 1.7rem;
}

.social.facebook:hover {
  color: #0F60BD;
  -webkit-transition: 0.7s;
  transition: 0.7s;
}

.social.twitter:hover {
  color: #21B5EE;
  -webkit-transition: 0.7s;
  transition: 0.7s;
}

.social.whatsapp:hover {
  color: #57A757;
  -webkit-transition: 0.7s;
  transition: 0.7s;
}

.social.instagram:hover {
  color: #E13D62;
  -webkit-transition: 0.7s;
  transition: 0.7s;
}

.social.snapchat:hover {
  color: #FFD400;
  -webkit-transition: 0.7s;
  transition: 0.7s;
}

/* Scss Document */
html {
  height: 100%;
}

.imgFill {
  height: 70vh;
  background-repeat: no-repeat;
  background-position: center top;
  opacity: 0;
  visibility: hidden;
}

.section.turqBgrd {
  background-color: #2A9BA8;
}

.section.purpleBgrd {
  background-color: #6C52B2;
}

.section.smaltBlueBgrd {
  background-color: #1D7FB4;
}

.footerSocial {
  margin-left: 10%;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
